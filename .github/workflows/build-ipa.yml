name: Flutter Build and Release IPA

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    
    - name: Get dependencies
      run: flutter pub get

    - name: Build iOS release
      env:
        DISTRIBUTION_CERTIFICATE: ${{ secrets.DISTRIBUTION_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
      run: |
        echo $DISTRIBUTION_CERTIFICATE | base64 --decode > cert.p12
        echo $PROVISIONING_PROFILE | base64 --decode > profile.mobileprovision

        # Installer le certificat
        security create-keychain -p "" build.keychain
        security import cert.p12 -t agg -k ~/Library/Keychains/build.keychain -P $CERTIFICATE_PASSWORD -A
        security list-keychains -s ~/Library/Keychains/build.keychain
        security unlock-keychain -p "" ~/Library/Keychains/build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain

        # Copier le profil d'approvisionnement
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

        # Construire l'application
        flutter build ios --release --no-codesign
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/ios/ipa/Runner.ipa"
        tag: v0.2.${{ github.run_number }}
        name: Release v0.2.${{ github.run_number }}
        body: New iOS release for version 0.2.${{ github.run_number }}
        token: ${{ secrets.GITHUB_TOKEN }}
        
